<canvas id="gameOfLife" class="absolute inset-0"></canvas>
<script>
    var canvas = document.getElementById('gameOfLife');
    var context = canvas.getContext('2d');
    var W = window.innerWidth;
    var H = window.innerHeight;

    canvas.width = W;
    canvas.height = H;

    var cellSize = 10; // Increased cell size
    var gap = 35; // Gap between cells
    var effectiveCellSize = cellSize + gap; // Total size including the gap
    var columns = Math.floor(W / effectiveCellSize);
    var rows = Math.floor(H / effectiveCellSize);

    // Initialize grid
    var grid = Array.from({ length: rows }, () => Array.from({ length: columns }, () => Math.round(Math.random())));

    // Rules of the game
    const rules = { live: [2, 3], dead: [3] };

    // Update grid for game of life
    function updateGrid() {
        var newGrid = grid.map(arr => [...arr]);

        for (let i = 0; i < rows; i++) {
            for (let j = 0; j < columns; j++) {
                var liveNeighbors = countNeighbors(grid, i, j);

                if (grid[i][j] === 1 && !rules.live.includes(liveNeighbors)) {
                    if (Math.random() > 0.999) { // Slow down the changes
                        newGrid[i][j] = 0;
                    }
                } else if (grid[i][j] === 0 && rules.dead.includes(liveNeighbors)) {
                    if (Math.random() > 0.99) { // Slow down the changes
                        newGrid[i][j] = 1;
                    }
                }
            }
        }

        grid = newGrid;
    }

    // Count live neighbors
    function countNeighbors(grid, x, y) {
        var sum = 0;
        for (let i = -1; i <= 1; i++) {
            for (let j = -1; j <= 1; j++) {
                var col = (x + i + rows) % rows;
                var row = (y + j + columns) % columns;
                sum += grid[col][row];
            }
        }
        sum -= grid[x][y];
        return sum;
    }

    // Draw the grid
    function drawGrid() {
        context.clearRect(0, 0, W, H);

        for (let i = 0; i < rows; i++) {
            for (let j = 0; j < columns; j++) {
                var color = grid[i][j] ? '#7761F1' : '#000'; // Live cells in purple, dead cells in black
                context.fillStyle = color;
                context.fillRect(j * effectiveCellSize, i * effectiveCellSize, cellSize, cellSize);
            }
        }
    }

    // Animation loop
    function animate() {
        updateGrid();
        drawGrid();
        requestAnimationFrame(animate);
    }

    animate();
</script>
